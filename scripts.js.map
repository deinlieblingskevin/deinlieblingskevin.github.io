{"version":3,"file":"scripts.js","mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kDAAkD,cAAc;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,kBAAkB;AAC5E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+GAA+G,UAAU,aAAa,IAAI;AAC1I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,qCAAqC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACA,iCAAiC,gCAAgC;AACjE;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC","sources":["node_modules\\scroll-out\\dist\\scroll-out.js"],"sourcesContent":["var ScrollOut = (function () {\n  'use strict';\n\n  function clamp(v, min, max) {\r\n      return min > v ? min : max < v ? max : v;\r\n  }\r\n  function sign(x) {\r\n      return (+(x > 0) - +(x < 0));\r\n  }\r\n  function round(n) {\r\n      return Math.round(n * 10000) / 10000;\r\n  }\n\n  var cache = {};\r\n  function replacer(match) {\r\n      return '-' + match[0].toLowerCase();\r\n  }\r\n  function hyphenate(value) {\r\n      return cache[value] || (cache[value] = value.replace(/([A-Z])/g, replacer));\r\n  }\n\n  /** find elements */\r\n  function $(e, parent) {\r\n      return !e || e.length === 0\r\n          ? // null or empty string returns empty array\r\n              []\r\n          : e.nodeName\r\n              ? // a single element is wrapped in an array\r\n                  [e]\r\n              : // selector and NodeList are converted to Element[]\r\n                  [].slice.call(e[0].nodeName ? e : (parent || document.documentElement).querySelectorAll(e));\r\n  }\r\n  function setAttrs(el, attrs) {\r\n      // tslint:disable-next-line:forin\r\n      for (var key in attrs) {\r\n          if (key.indexOf('_')) {\r\n              el.setAttribute('data-' + hyphenate(key), attrs[key]);\r\n          }\r\n      }\r\n  }\r\n  function setProps(cssProps) {\r\n      return function (el, props) {\r\n          for (var key in props) {\r\n              if (key.indexOf('_') && (cssProps === true || cssProps[key])) {\r\n                  el.style.setProperty('--' + hyphenate(key), round(props[key]));\r\n              }\r\n          }\r\n      };\r\n  }\n\n  var clearTask;\r\n  var subscribers = [];\r\n  function loop() {\r\n      clearTask = 0;\r\n      subscribers.slice().forEach(function (s2) { return s2(); });\r\n      enqueue();\r\n  }\r\n  function enqueue() {\r\n      if (!clearTask && subscribers.length) {\r\n          clearTask = requestAnimationFrame(loop);\r\n      }\r\n  }\r\n  function subscribe(fn) {\r\n      subscribers.push(fn);\r\n      enqueue();\r\n      return function () {\r\n          subscribers = subscribers.filter(function (s) { return s !== fn; });\r\n          if (!subscribers.length && clearTask) {\r\n              cancelAnimationFrame(clearTask);\r\n              clearTask = 0;\r\n          }\r\n      };\r\n  }\n\n  function unwrap(value, el, ctx, doc) {\r\n      return typeof value === 'function' ? value(el, ctx, doc) : value;\r\n  }\r\n  function noop() { }\n\n  /**\r\n   * Creates a new instance of ScrollOut that marks elements in the viewport with\r\n   * an \"in\" class and marks elements outside of the viewport with an \"out\"\r\n   */\r\n  // tslint:disable-next-line:no-default-export\r\n  function main (opts) {\r\n      // Apply default options.\r\n      opts = opts || {};\r\n      // Debounce onChange/onHidden/onShown.\r\n      var onChange = opts.onChange || noop;\r\n      var onHidden = opts.onHidden || noop;\r\n      var onShown = opts.onShown || noop;\r\n      var onScroll = opts.onScroll || noop;\r\n      var props = opts.cssProps ? setProps(opts.cssProps) : noop;\r\n      var se = opts.scrollingElement;\r\n      var container = se ? $(se)[0] : window;\r\n      var doc = se ? $(se)[0] : document.documentElement;\r\n      var rootChanged = false;\r\n      var scrollingElementContext = {};\r\n      var elementContextList = [];\r\n      var clientOffsetX, clientOffsety;\r\n      var sub;\r\n      function index() {\r\n          elementContextList = $(opts.targets || '[data-scroll]', $(opts.scope || doc)[0]).map(function (el) { return ({ element: el }); });\r\n      }\r\n      function update() {\r\n          // Calculate position, direction and ratio.\r\n          var clientWidth = doc.clientWidth;\r\n          var clientHeight = doc.clientHeight;\r\n          var scrollDirX = sign(-clientOffsetX + (clientOffsetX = doc.scrollLeft || window.pageXOffset));\r\n          var scrollDirY = sign(-clientOffsety + (clientOffsety = doc.scrollTop || window.pageYOffset));\r\n          var scrollPercentX = doc.scrollLeft / (doc.scrollWidth - clientWidth || 1);\r\n          var scrollPercentY = doc.scrollTop / (doc.scrollHeight - clientHeight || 1);\r\n          // Detect if the root context has changed.\r\n          rootChanged =\r\n              rootChanged ||\r\n                  scrollingElementContext.scrollDirX !== scrollDirX ||\r\n                  scrollingElementContext.scrollDirY !== scrollDirY ||\r\n                  scrollingElementContext.scrollPercentX !== scrollPercentX ||\r\n                  scrollingElementContext.scrollPercentY !== scrollPercentY;\r\n          scrollingElementContext.scrollDirX = scrollDirX;\r\n          scrollingElementContext.scrollDirY = scrollDirY;\r\n          scrollingElementContext.scrollPercentX = scrollPercentX;\r\n          scrollingElementContext.scrollPercentY = scrollPercentY;\r\n          var childChanged = false;\r\n          for (var index_1 = 0; index_1 < elementContextList.length; index_1++) {\r\n              var ctx = elementContextList[index_1];\r\n              var element = ctx.element;\r\n              // find the distance from the element to the scrolling container\r\n              var target = element;\r\n              var offsetX = 0;\r\n              var offsetY = 0;\r\n              do {\r\n                  offsetX += target.offsetLeft;\r\n                  offsetY += target.offsetTop;\r\n                  target = target.offsetParent;\r\n              } while (target && target !== container);\r\n              // Get element dimensions.\r\n              var elementHeight = element.clientHeight || element.offsetHeight || 0;\r\n              var elementWidth = element.clientWidth || element.offsetWidth || 0;\r\n              // Find visible ratios for each element.\r\n              var visibleX = (clamp(offsetX + elementWidth, clientOffsetX, clientOffsetX + clientWidth) -\r\n                  clamp(offsetX, clientOffsetX, clientOffsetX + clientWidth)) /\r\n                  elementWidth;\r\n              var visibleY = (clamp(offsetY + elementHeight, clientOffsety, clientOffsety + clientHeight) -\r\n                  clamp(offsetY, clientOffsety, clientOffsety + clientHeight)) /\r\n                  elementHeight;\r\n              var intersectX = visibleX === 1 ? 0 : sign(offsetX - clientOffsetX);\r\n              var intersectY = visibleY === 1 ? 0 : sign(offsetY - clientOffsety);\r\n              var viewportX = clamp((clientOffsetX - (elementWidth / 2 + offsetX - clientWidth / 2)) / (clientWidth / 2), -1, 1);\r\n              var viewportY = clamp((clientOffsety - (elementHeight / 2 + offsetY - clientHeight / 2)) / (clientHeight / 2), -1, 1);\r\n              var visible = void 0;\r\n              if (opts.offset) {\r\n                  visible = unwrap(opts.offset, element, ctx, doc) <= clientOffsety ? 1 : 0;\r\n              }\r\n              else if ((unwrap(opts.threshold, element, ctx, doc) || 0) < visibleX * visibleY) {\r\n                  visible = 1;\r\n              }\r\n              else {\r\n                  visible = 0;\r\n              }\r\n              var changedVisible = ctx.visible !== visible;\r\n              var changed = ctx._changed ||\r\n                  changedVisible ||\r\n                  ctx.visibleX !== visibleX ||\r\n                  ctx.visibleY !== visibleY ||\r\n                  ctx.index !== index_1 ||\r\n                  ctx.elementHeight !== elementHeight ||\r\n                  ctx.elementWidth !== elementWidth ||\r\n                  ctx.offsetX !== offsetX ||\r\n                  ctx.offsetY !== offsetY ||\r\n                  ctx.intersectX !== ctx.intersectX ||\r\n                  ctx.intersectY !== ctx.intersectY ||\r\n                  ctx.viewportX !== viewportX ||\r\n                  ctx.viewportY !== viewportY;\r\n              if (changed) {\r\n                  childChanged = true;\r\n                  ctx._changed = true;\r\n                  ctx._visibleChanged = changedVisible;\r\n                  ctx.visible = visible;\r\n                  ctx.elementHeight = elementHeight;\r\n                  ctx.elementWidth = elementWidth;\r\n                  ctx.index = index_1;\r\n                  ctx.offsetX = offsetX;\r\n                  ctx.offsetY = offsetY;\r\n                  ctx.visibleX = visibleX;\r\n                  ctx.visibleY = visibleY;\r\n                  ctx.intersectX = intersectX;\r\n                  ctx.intersectY = intersectY;\r\n                  ctx.viewportX = viewportX;\r\n                  ctx.viewportY = viewportY;\r\n                  ctx.visible = visible;\r\n              }\r\n          }\r\n          if (!sub && (rootChanged || childChanged)) {\r\n              sub = subscribe(render);\r\n          }\r\n      }\r\n      function render() {\r\n          maybeUnsubscribe();\r\n          // Update root attributes if they have changed.\r\n          if (rootChanged) {\r\n              rootChanged = false;\r\n              setAttrs(doc, {\r\n                  scrollDirX: scrollingElementContext.scrollDirX,\r\n                  scrollDirY: scrollingElementContext.scrollDirY\r\n              });\r\n              props(doc, scrollingElementContext);\r\n              onScroll(doc, scrollingElementContext, elementContextList);\r\n          }\r\n          var len = elementContextList.length;\r\n          for (var x = len - 1; x > -1; x--) {\r\n              var ctx = elementContextList[x];\r\n              var el = ctx.element;\r\n              var visible = ctx.visible;\r\n              var justOnce = el.hasAttribute('scrollout-once') || false; // Once\r\n              if (ctx._changed) {\r\n                  ctx._changed = false;\r\n                  props(el, ctx);\r\n              }\r\n              if (ctx._visibleChanged) {\r\n                  setAttrs(el, { scroll: visible ? 'in' : 'out' });\r\n                  onChange(el, ctx, doc);\r\n                  (visible ? onShown : onHidden)(el, ctx, doc);\r\n              }\r\n              // if this is shown multiple times, keep it in the list\r\n              if (visible && (opts.once || justOnce)) { // or if this element just display it once\r\n                  elementContextList.splice(x, 1);\r\n              }\r\n          }\r\n      }\r\n      function maybeUnsubscribe() {\r\n          if (sub) {\r\n              sub();\r\n              sub = undefined;\r\n          }\r\n      }\r\n      // Run initialize index.\r\n      index();\r\n      update();\r\n      render();\r\n      // Collapses sequential updates into a single update.\r\n      var updateTaskId = 0;\r\n      var onUpdate = function () {\r\n          updateTaskId = updateTaskId || setTimeout(function () {\r\n              updateTaskId = 0;\r\n              update();\r\n          }, 0);\r\n      };\r\n      // Hook up document listeners to automatically detect changes.\r\n      window.addEventListener('resize', onUpdate);\r\n      container.addEventListener('scroll', onUpdate);\r\n      return {\r\n          index: index,\r\n          update: update,\r\n          teardown: function () {\r\n              maybeUnsubscribe();\r\n              window.removeEventListener('resize', onUpdate);\r\n              container.removeEventListener('scroll', onUpdate);\r\n          }\r\n      };\r\n  }\n\n  return main;\n\n}());\n"],"names":[],"sourceRoot":"webpack:///"}